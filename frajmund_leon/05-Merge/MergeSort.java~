import java.util.*;
import java.lang.*;
public class MergeSort{


    public MergeSort(){}

    public void print(ArrayList a){
	for(int x = 0; x<a.size();x++){
	    System.out.println(a.get(x));
	}
    }

    public ArrayList<Comparable> sub(int a, int b, ArrayList<Comparable> array){
	ArrayList c = new ArrayList();
	for(; a < b; a ++)
	    c.add(array.get(a));
	return c;
    }

    public ArrayList<Comparable> merge(ArrayList<Comparable> a, ArrayList<Comparable> b){
	if(a.size() == 0) return a;
	if(b.size() == 0) return b;
	ArrayList<Comparable> c = new ArrayList<Comparable>(a.size()+b.size());
	int la = 0; int lb = 0; int letter = 0; char letterA; char letterB;;
	do{
	    if(a.get(la).compareTo(b.get(lb)) < 0){
		c.add(a.get(la));
		la++;
	    }
	    else{
		c.add(b.get(lb));
		lb++;
	    }
	}while(la < a.size() &&lb < b.size());
    
	if(la < a.size()){
	    for(int x = la; x < a.size(); x++){
		c.add(a.get(x));
	    }
	}
	if(lb < b.size()){
	    for(int x = lb; x < b.size(); x ++){
		c.add(b.get(x));
	    }
	}
	return c;
    }

    public ArrayList<Comparable> MergeSort(ArrayList a){
	if(a.size() < 2) return a;
	ArrayList<Comparable> c = new ArrayList<Comparable>(a.size() / 2);
	ArrayList<Comparable> d = new ArrayList<Comparable>(a.size() - c.size());

	c = MergeSort(sub(0, a.size() / 2, a));
	d = MergeSort(sub(a.size() / 2, a.size(), a));
	
	a = merge(c,d);
	return a;
    }
}

